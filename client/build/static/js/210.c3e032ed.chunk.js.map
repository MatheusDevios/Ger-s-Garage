{"version":3,"file":"static/js/210.c3e032ed.chunk.js","mappings":"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","sources":["Components/ProductsDetails.jsx","Components/Admin/ServiceDetails.jsx","Components/Admin/AdminC.jsx","Pages/Admin.jsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ProductsDetails = (props) => {\n  const { name, amount } = props;\n  return (\n    <Orders>\n      <OrderInfo>\n        <Info>Item: {name}</Info>\n      </OrderInfo>\n      <OrderInfo>\n        <Info>Amount: {amount}</Info>\n      </OrderInfo>\n    </Orders>\n  );\n};\n\nexport default ProductsDetails;\n\nconst Orders = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst OrderInfo = styled.div`\n  padding: 0.25rem 2rem;\n`;\n\nconst Info = styled.p``;\n","import ProductsDetails from \"../ProductsDetails\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst ServiceDetails = (props) => {\n  const { serviceId, service, products } = props;\n  return (\n    <UserDetailsContainer>\n      <TopContainer>\n        <h3>Status: {service.status}</h3>\n        <h3>Service Info: {props.name}</h3>\n        <ButtonContainer>\n          <Link to={`/invoice/${serviceId}`} state={{ from: props }}>\n            <Button>Invoice</Button>\n          </Link>\n          <Link to={`/invoiceAdmin/${serviceId}`} state={{ from: props }}>\n            <Button>Edit Invoice</Button>\n          </Link>\n        </ButtonContainer>\n      </TopContainer>\n      <OrderID>Appointment # {serviceId}</OrderID>\n      <ServiceContainer>Service: {service.name}</ServiceContainer>\n      {products.length > 0 &&\n        products.map((order, index) => (\n          <ProductsDetails\n            key={index}\n            name={order.name}\n            amount={order.amount}\n          />\n        ))}\n    </UserDetailsContainer>\n  );\n};\n\nexport default ServiceDetails;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst UserDetailsContainer = styled.li`\n  display: flex;\n  flex-direction: column;\n  margin: 1rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid black;\n  & h3 {\n    margin: 0 0 0.25rem 0;\n    font-size: 1.4rem;\n  }\n`;\n\nconst ServiceContainer = styled.div`\n  margin-top: 0.8rem;\n  margin-bottom: 0.2rem;\n  font-weight: bold;\n  color: #d32929;\n  font-size: 1.2rem;\n`;\n\nconst TopContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  padding: 10px 15px;\n  background-color: black;\n  box-shadow: 0 3px 24px rgb(0 0 0 / 30%);\n  border-radius: 1rem;\n  color: white;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.5s ease;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\nconst OrderID = styled.div`\n  color: rgb(163, 153, 153);\n  font-weight: 600;\n  padding-bottom: 10px;\n  font-size: 0.9rem;\n`;\n","import { useQuery } from \"@tanstack/react-query\";\nimport React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { userRequest } from \"../../Utils/requestMethods\";\nimport ServiceDetails from \"./ServiceDetails\";\nimport Loading from \"../Loading\";\nimport { mobile } from \"../../Utils/responsive\";\n\nconst AdminC = () => {\n  let contentService;\n  let contentSlot;\n  let date = new Date();\n  let year = date.getFullYear();\n  let month = String(date.getMonth() + 1).padStart(2, \"0\");\n  let day = String(date.getDate()).padStart(2, \"0\");\n  let newDate = `${day}/${month}/${year}`;\n  const userId = localStorage.getItem(\"userId\");\n\n  const { data: serviceInfo, isFetching: serviceIsFetching } = useQuery({\n    queryKey: [\"serviceInfo\"],\n    queryFn: async () => {\n      const res = await userRequest.get(`appointments/${userId}`);\n      // console.log(res.data);\n      return res.data;\n    },\n  });\n  const { data: slotInfo, isFetching: slotIsFetching } = useQuery({\n    queryKey: [\"slotsInfo\"],\n    queryFn: async () => {\n      const res = await userRequest.get(`slots/`);\n      // console.log(res.data);\n\n      return res.data;\n    },\n  });\n\n  if (serviceIsFetching) {\n    contentService = <Loading />;\n  } else {\n    contentService = (\n      <>\n        {serviceInfo.map((item, index) => (\n          <ServiceDetails\n            key={item._id}\n            serviceId={item._id}\n            status={item.service.status}\n            name={item.name}\n            email={item.email}\n            phone={item.phone}\n            type={item.type}\n            maker={item.maker}\n            license={item.license}\n            mechanic={item.mechanic}\n            comments={item.comments}\n            totalProduct={item.totalAmountProducts}\n            total={item.totalAppointmentAmount}\n            orderId={item._id}\n            service={item.service}\n            products={item.products}\n            date={item.createdAt}\n            slot={item.slots}\n          />\n        ))}\n      </>\n    );\n  }\n\n  if (slotIsFetching) {\n    contentSlot = <Loading />;\n  } else {\n    contentSlot = (\n      <>\n        {slotInfo.map(\n          (item, index) =>\n            item.slotDate === newDate && (\n              <TimeContainer key={index}>\n                {item.mechanic === \"1\" && <p>Mechanic: Michael</p>}\n                {item.mechanic === \"2\" && <p>Mechanic: Jordan</p>}\n                {item.mechanic === \"3\" && <p>Mechanic: Tim</p>}\n                {item.mechanic === \"4\" && <p>Mechanic: Wilson</p>}\n                {item.slotTime === \"1\" && <p>At: 8:30 - 10:30</p>}\n                {item.slotTime === \"2\" && <p>At: 10:30 - 12:30</p>}\n                {item.slotTime === \"3\" && <p>At: 13:00 - 15:00</p>}\n                {item.slotTime === \"4\" && <p>At: 15:30 - 17:30</p>}\n                <br />\n              </TimeContainer>\n            )\n        )}\n      </>\n    );\n  }\n\n  return (\n    <AdminInfoContainer>\n      <Title>Day Schedule / Services</Title>\n      <Conteiner>\n        <ContainerSchedule>\n          <CardSchedule>\n            <Time>Date: {newDate}</Time>\n            <ul>{contentSlot}</ul>\n          </CardSchedule>\n        </ContainerSchedule>\n        <ContainerService>\n          <Card>\n            <ul>{contentService}</ul>\n          </Card>\n        </ContainerService>\n      </Conteiner>\n    </AdminInfoContainer>\n  );\n};\n\nexport default AdminC;\n\nconst usersApear = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(3rem);\n  }\n  \n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  `;\n\nconst AdminInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: 60rem;\n  width: 95%;\n  margin: 2rem auto;\n  & ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n  animation: ${usersApear} 1s ease-out forwards;\n`;\n\nconst Conteiner = styled.div`\n  display: flex;\n  ${mobile({\n    flexDirection: \"column\",\n    gap: \"1rem\",\n  })}\n`;\nconst ContainerSchedule = styled.div`\n  flex: 1;\n`;\nconst ContainerService = styled.div`\n  flex: 2;\n`;\n\nconst Card = styled.div`\n  padding: 1rem;\n  margin: auto;\n  max-width: 60rem;\n  width: 90%;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.25);\n  border-radius: 14px;\n  background-color: white;\n`;\nconst CardSchedule = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1rem;\n  margin: auto;\n  max-width: 60rem;\n  width: 90%;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.25);\n  border-radius: 14px;\n  background-color: white;\n`;\n\nconst Title = styled.h3`\n  padding-bottom: 1rem;\n  font-size: 38px;\n  line-height: 1.4;\n  font-weight: 800;\n`;\n\nconst TimeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: black;\n  font-weight: 600;\n  padding-top: 0.9rem;\n  font-size: 1rem;\n`;\nconst Time = styled.div`\n  color: black;\n  font-weight: 900;\n  padding-bottom: 1.4rem;\n  font-size: 1.4rem;\n`;\n","import React from \"react\";\nimport AdminC from \"../Components/Admin/AdminC\";\n\nconst Admin = () => {\n  return (\n    <div>\n      <AdminC />\n    </div>\n  );\n};\n\nexport default Admin;\n"],"names":["props","name","amount","Orders","OrderInfo","Info","styled","serviceId","service","products","UserDetailsContainer","TopContainer","status","ButtonContainer","to","state","from","Button","OrderID","ServiceContainer","length","map","order","index","ProductsDetails","contentService","contentSlot","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","newDate","userId","localStorage","getItem","useQuery","queryKey","queryFn","userRequest","res","data","serviceInfo","serviceIsFetching","isFetching","slotInfo","slotIsFetching","Loading","item","_id","email","phone","type","maker","license","mechanic","comments","totalProduct","totalAmountProducts","total","totalAppointmentAmount","orderId","createdAt","slot","slots","slotDate","TimeContainer","slotTime","AdminInfoContainer","Title","Conteiner","ContainerSchedule","CardSchedule","Time","ContainerService","Card","usersApear","keyframes","mobile","flexDirection","gap"],"sourceRoot":""}