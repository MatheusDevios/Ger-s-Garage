{"version":3,"file":"static/js/802.dde007b6.chunk.js","mappings":"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","sources":["hooks/use-input.js","Components/Checkout/Checkout.jsx","Components/Checkout/CheckoutForm.jsx","Pages/Checkout.jsx"],"sourcesContent":["import { useReducer } from \"react\";\n\nconst initialInputState = {\n  value: \"\",\n  isTouched: false,\n};\n\nconst inputStateReducer = (state, action) => {\n  if (action.type === \"INPUT\") {\n    return { value: action.value, isTouched: state.isTouched };\n  }\n  if (action.type === \"BLUR\") {\n    return { isTouched: true, value: state.value };\n  }\n  if (action.type === \"RESET\") {\n    return { isTouched: false, value: \"\" };\n  }\n  return inputStateReducer;\n};\n\nconst useInput = (validateFunc) => {\n  const [inputState, dispatchInputState] = useReducer(\n    inputStateReducer,\n    initialInputState\n  );\n\n  const valueIsValid = validateFunc(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n\n  const valueChangeHandler = (event) => {\n    dispatchInputState({ type: \"INPUT\", value: event.target.value });\n  };\n\n  const inputBlurHandler = (event) => {\n    dispatchInputState({ type: \"BLUR\" });\n  };\n\n  const reset = () => {\n    dispatchInputState({ type: \"RESET\" });\n  };\n\n  return {\n    value: inputState.value,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n","import React from \"react\";\nimport useInput from \"../../hooks/use-input\";\nimport styled from \"styled-components\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\n\nconst isNotEmpty = (value) => value.trim() !== \"\";\nconst isPostalCode = (value) => value.trim().length >= 7;\n\nconst Checkout = (props) => {\n  const {\n    value: nameValue,\n    isValid: nameIsValid,\n    hasError: nameError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetName,\n  } = useInput(isNotEmpty);\n  const {\n    value: streetValue,\n    isValid: streetIsValid,\n    hasError: streetError,\n    valueChangeHandler: streetChangeHandler,\n    inputBlurHandler: streetBlurHandler,\n    reset: resetStreet,\n  } = useInput(isNotEmpty);\n  const {\n    value: codeValue,\n    isValid: codeIsValid,\n    hasError: codeError,\n    valueChangeHandler: codeChangeHandler,\n    inputBlurHandler: codeBlurHandler,\n    reset: resetCode,\n  } = useInput(isPostalCode);\n  const {\n    value: cityValue,\n    isValid: cityIsValid,\n    hasError: cityError,\n    valueChangeHandler: cityChangeHandler,\n    inputBlurHandler: cityBlurHandler,\n    reset: resetCity,\n  } = useInput(isNotEmpty);\n  const {\n    value: countryValue,\n    isValid: countryIsValid,\n    hasError: countryError,\n    valueChangeHandler: countryChangeHandler,\n    inputBlurHandler: countryBlurHandler,\n    reset: resetCountry,\n  } = useInput(isNotEmpty);\n\n  const formIsValid =\n    nameIsValid &&\n    codeIsValid &&\n    streetIsValid &&\n    cityIsValid &&\n    countryIsValid;\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    if (!formIsValid || !event) {\n      toast.error(\"Please enter valid information.\");\n      return;\n    }\n\n    props.onConfirm({\n      street: streetValue,\n      postalCode: codeValue,\n      country: countryValue,\n      city: cityValue,\n    });\n\n    resetCity();\n    resetCountry();\n    resetCode();\n    resetName();\n    resetStreet();\n  };\n\n  return (\n    <Form>\n      <Control>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={nameValue}\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n        />\n        {nameError && <p> Please enter your Name.</p>}\n      </Control>\n      <Control>\n        <label htmlFor=\"street\">Address</label>\n        <input\n          type=\"text\"\n          id=\"street\"\n          value={streetValue}\n          onChange={streetChangeHandler}\n          onBlur={streetBlurHandler}\n        />\n        {streetError && <p> Please enter your Street Adress.</p>}\n      </Control>\n      <Control>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input\n          type=\"text\"\n          id=\"postal\"\n          value={codeValue}\n          onChange={codeChangeHandler}\n          onBlur={codeBlurHandler}\n        />\n        {codeError && (\n          <p> Please enter your Postal Code with 5 digits or more.</p>\n        )}\n      </Control>\n      <Control>\n        <label htmlFor=\"city\">County</label>\n        <input\n          type=\"text\"\n          id=\"city\"\n          value={cityValue}\n          onChange={cityChangeHandler}\n          onBlur={cityBlurHandler}\n        />\n        {cityError && <p> Please enter your City Name.</p>}\n      </Control>\n      <Control>\n        <label htmlFor=\"city\">Country</label>\n        <input\n          type=\"text\"\n          id=\"city\"\n          value={countryValue}\n          onChange={countryChangeHandler}\n          onBlur={countryBlurHandler}\n        />\n        {countryError && <p> Please enter your City Name.</p>}\n      </Control>\n      <Actions>\n        <Link to=\"/cart\">\n          <ActionsButton type=\"button\">Cancel</ActionsButton>\n        </Link>\n        <ActionsSubmit onClick={confirmHandler}>Confirm</ActionsSubmit>\n      </Actions>\n    </Form>\n  );\n};\n\nexport default Checkout;\n\nconst Form = styled.form`\n  margin: 1rem 0;\n  overflow: auto;\n`;\n\nconst Control = styled.div`\n  margin-bottom: 0.5rem;\n  & label {\n    font-weight: bold;\n    margin-bottom: 0.25rem;\n    display: block;\n  }\n  & input {\n    width: 40rem;\n    font: inherit;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    max-width: 100%;\n  }\n  & p {\n    background-color: #ffeff1;\n    color: red;\n  }\n`;\nconst Actions = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst ActionsButton = styled.button`\n  font: inherit;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.25);\n  color: black;\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n  border-radius: 25px;\n  padding: 0.5rem 2rem;\n  transition: all 0.5s ease;\n  transform: scale(0.95);\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nconst ActionsSubmit = styled.button`\n  font: inherit;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.25);\n  border: 1px solid black;\n  background-color: black;\n  cursor: pointer;\n  padding: 0.5rem 2rem;\n  border-radius: 25px;\n  color: white;\n  transition: all 0.5s ease;\n  transform: scale(0.95);\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","import Checkout from \"./Checkout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { mobile, tablet } from \"../../Utils/responsive\";\nimport { userRequest } from \"../../Utils/requestMethods\";\nimport { cartActions } from \"../../Redux/cartRedux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\n\nconst CheckoutForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart.items);\n  const userId = useSelector((state) => state.auth.userId);\n  const cartTotalRedux = useSelector((state) => state.cart.totalAmount);\n  const subTotal = cartTotalRedux.toFixed(2);\n  const shipping = 5.9;\n  const discount = 0;\n  const totalPrice = (cartTotalRedux + shipping - discount).toFixed(2);\n\n  const submitOrder = async (address) => {\n    await userRequest.post(`/orders/${userId}`, {\n      userId: userId,\n      products: cart,\n      subtotal: parseInt(subTotal),\n      total: parseInt(totalPrice),\n      address: address,\n    });\n    dispatch(cartActions.clearCartHandler({ items: [], totalAmount: 0 }));\n    toast.success(\"Order done successfully!\");\n    setTimeout(function () {\n      navigate(\"/\");\n    }, 2000);\n  };\n  return (\n    <Container>\n      <Wrapper>\n        <Form>\n          <Checkout onConfirm={submitOrder} />\n        </Form>\n        <Summary>\n          <SummaryTitle>ORDER SUMMARY</SummaryTitle>\n          <SummaryItem>\n            <SummaryItemText>Subtotal</SummaryItemText>\n            <SummaryItemPrice>{subTotal} €</SummaryItemPrice>\n          </SummaryItem>\n          <SummaryItem>\n            <SummaryItemText>Estimated Shipping</SummaryItemText>\n            <SummaryItemPrice>{shipping.toFixed(2)} €</SummaryItemPrice>\n          </SummaryItem>\n          <SummaryItem>\n            <SummaryItemText>Shipping Discount</SummaryItemText>\n            <SummaryItemPrice>{discount.toFixed(2)} €</SummaryItemPrice>\n          </SummaryItem>\n          <SummaryItem type=\"total\">\n            <SummaryItemText>Total</SummaryItemText>\n            <SummaryItemPrice>{totalPrice} €</SummaryItemPrice>\n          </SummaryItem>\n        </Summary>\n        <ToastContainer\n          newestOnTop={true}\n          autoClose={2000}\n          pauseOnHover\n          theme=\"dark\"\n        />\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default CheckoutForm;\n\nconst Container = styled.div``;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 0 auto;\n  width: 80%;\n  max-width: 1200px;\n  ${tablet({})}\n  ${mobile({ padding: \"10px\", flexDirection: \"column-reverse\" })}\n`;\n\nconst Form = styled.div`\n  flex: 2;\n  padding-right: 1.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Summary = styled.div`\n  flex: 1;\n  border: 0.5px solid lightgray;\n  border-radius: 10px;\n  padding: 20px;\n  height: 50vh;\n`;\n\nconst SummaryTitle = styled.h1`\n  font-weight: 200;\n`;\n\nconst SummaryItem = styled.div`\n  margin: 30px 0px;\n  display: flex;\n  justify-content: space-between;\n  font-weight: ${(props) => props.type === \"total\" && \"500\"};\n  font-size: ${(props) => props.type === \"total\" && \"24px\"};\n`;\n\nconst SummaryItemText = styled.span``;\n\nconst SummaryItemPrice = styled.span``;\n","import React from \"react\";\nimport CheckoutForm from \"../Components/Checkout/CheckoutForm\";\nimport Footer from \"../Components/Footer\";\nimport NavBar from \"../Components/NavBar\";\n\nconst Checkout = () => {\n  return (\n    <div>\n      <NavBar />\n      <CheckoutForm />\n      <Footer />\n    </div>\n  );\n};\n\nexport default Checkout;\n"],"names":["initialInputState","value","isTouched","inputStateReducer","state","action","type","validateFunc","useReducer","inputState","dispatchInputState","valueIsValid","hasError","isValid","valueChangeHandler","event","target","inputBlurHandler","reset","isNotEmpty","trim","isPostalCode","length","props","useInput","nameValue","nameIsValid","nameError","nameChangeHandler","nameBlurHandler","resetName","streetValue","streetIsValid","streetError","streetChangeHandler","streetBlurHandler","resetStreet","codeValue","codeIsValid","codeError","codeChangeHandler","codeBlurHandler","resetCode","cityValue","cityIsValid","cityError","cityChangeHandler","cityBlurHandler","resetCity","countryValue","countryIsValid","countryError","countryChangeHandler","countryBlurHandler","resetCountry","formIsValid","Form","Control","htmlFor","id","onChange","onBlur","Actions","to","ActionsButton","ActionsSubmit","onClick","preventDefault","onConfirm","street","postalCode","country","city","toast","styled","navigate","useNavigate","dispatch","useDispatch","cart","useSelector","items","userId","auth","cartTotalRedux","totalAmount","subTotal","toFixed","totalPrice","submitOrder","address","userRequest","products","subtotal","parseInt","total","cartActions","setTimeout","Container","Wrapper","Summary","SummaryTitle","SummaryItem","SummaryItemText","SummaryItemPrice","newestOnTop","autoClose","pauseOnHover","theme","tablet","mobile","padding","flexDirection","NavBar","Footer"],"sourceRoot":""}