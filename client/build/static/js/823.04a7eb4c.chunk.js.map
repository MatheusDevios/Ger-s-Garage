{"version":3,"file":"static/js/823.04a7eb4c.chunk.js","mappings":"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","sources":["Components/ProductsDetails.jsx","Components/User/ServiceDetails.jsx","Components/User/OrderDetails.jsx","Components/User/UserInfo.jsx","Pages/User.jsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ProductsDetails = (props) => {\n  const { name, amount } = props;\n  return (\n    <Orders>\n      <OrderInfo>\n        <Info>Item: {name}</Info>\n      </OrderInfo>\n      <OrderInfo>\n        <Info>Amount: {amount}</Info>\n      </OrderInfo>\n    </Orders>\n  );\n};\n\nexport default ProductsDetails;\n\nconst Orders = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst OrderInfo = styled.div`\n  padding: 0.25rem 2rem;\n`;\n\nconst Info = styled.p``;\n","import React from \"react\";\nimport ProductDetails from \"../ProductsDetails\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst ServiceDetails = (props) => {\n  const { serviceId, service, products } = props;\n\n  return (\n    <UserDetailsContainer>\n      <TopContainer>\n        <h3>Status: {service.status}</h3>\n        <h3> SERVICE INFO</h3>\n        <Link to={`/invoice/${serviceId}`} state={{ from: props }}>\n          <Button>Invoice</Button>\n        </Link>\n      </TopContainer>\n      <OrderID>Appointment # {serviceId}</OrderID>\n      <ServiceContainer>Service: {service.name}</ServiceContainer>\n      {products.length > 0 &&\n        products.map((order, index) => (\n          <ProductDetails key={index} name={order.name} amount={order.amount} />\n        ))}\n    </UserDetailsContainer>\n  );\n};\n\nexport default ServiceDetails;\n\nconst UserDetailsContainer = styled.li`\n  display: flex;\n  flex-direction: column;\n  margin: 1rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid black;\n  & h3 {\n    margin: 0 0 0.25rem 0;\n    font-size: 1.4rem;\n  }\n`;\n\nconst ServiceContainer = styled.div`\n  margin-top: 0.8rem;\n  margin-bottom: 0.2rem;\n  font-weight: bold;\n  color: #d32929;\n  font-size: 1.2rem;\n`;\n\nconst TopContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  padding: 10px 15px;\n  background-color: black;\n  box-shadow: 0 3px 24px rgb(0 0 0 / 30%);\n  border-radius: 1rem;\n  color: white;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.5s ease;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\nconst OrderID = styled.div`\n  color: rgb(163, 153, 153);\n  font-weight: 600;\n  padding-bottom: 10px;\n  font-size: 0.9rem;\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport ProductsDetails from \"../ProductsDetails\";\n\nconst OrderDetails = (props) => {\n  const { orderId, products, status } = props;\n  return (\n    <UserDetailsContainer>\n      <TopContainer>\n        <h3>Status: {status}</h3>\n        <h3>SHOPPING INFO</h3>\n        <Link to={`/invoice/${orderId}`} state={{ from: props }}>\n          <Button>Invoice</Button>\n        </Link>\n      </TopContainer>\n      <OrderID>Order # {orderId}</OrderID>\n      {products.map((order, index) => (\n        <ProductsDetails key={index} name={order.name} amount={order.amount} />\n      ))}\n    </UserDetailsContainer>\n  );\n};\n\nexport default OrderDetails;\n\nconst UserDetailsContainer = styled.li`\n  display: flex;\n  flex-direction: column;\n  margin: 1rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid black;\n  & h3 {\n    margin: 0 0 0.25rem 0;\n    font-size: 1.4rem;\n  }\n`;\n\nconst TopContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  padding: 10px 15px;\n  background-color: black;\n  box-shadow: 0 3px 24px rgb(0 0 0 / 30%);\n  border-radius: 1rem;\n  color: white;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.5s ease;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\nconst OrderID = styled.div`\n  color: rgb(163, 153, 153);\n  font-weight: 600;\n  padding-bottom: 10px;\n  font-size: 0.9rem;\n`;\n","import Loading from \"../Loading\";\nimport ServiceDetails from \"./ServiceDetails\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { userRequest } from \"../../Utils/requestMethods\";\nimport styled, { keyframes } from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { mobile } from \"../../Utils/responsive\";\nimport OrderDetails from \"./OrderDetails\";\n\nconst UserInfo = () => {\n  const userId = localStorage.getItem(\"userId\");\n  const name = useSelector((state) => state.auth.name);\n  const phone = useSelector((state) => state.auth.phone);\n  const email = useSelector((state) => state.auth.email);\n  let contentOrder;\n  let contentService;\n\n  const { data: orderInfo, isFetching: orderIsFetching } = useQuery({\n    queryKey: [\"orderInfo\"],\n    queryFn: async () => {\n      const res = await userRequest.get(`orders/find/${userId}`);\n      // console.log(res.data);\n      return res.data;\n    },\n  });\n\n  const { data: serviceInfo, isFetching: serviceIsFetching } = useQuery({\n    queryKey: [\"serviceInfo\"],\n    queryFn: async () => {\n      const res = await userRequest.get(`appointments/all/${userId}`);\n      // console.log(res.data);\n      return res.data;\n    },\n  });\n\n  // console.log(loadedData);\n\n  if (orderIsFetching || serviceIsFetching) {\n    contentOrder = <Loading />;\n  } else {\n    contentOrder = (\n      <>\n        {orderInfo.map((item, index) => (\n          <OrderDetails\n            key={item._id}\n            orderId={item._id}\n            name={name}\n            email={email}\n            phone={phone}\n            city={item.address.city}\n            country={item.address.country}\n            street={item.address.street}\n            postalCode={item.address.postalCode}\n            products={item.products}\n            subtotal={item.subtotal}\n            total={item.total}\n            date={item.createdAt}\n            status={item.status}\n          />\n        ))}\n      </>\n    );\n    contentService = (\n      <>\n        {/* USE THE CODE BELLOW BEFORE THE SERVICE \n        DETAILS TO ONLY DISPLAY THE SERBIVES FIXED, COMPLETED AND UNREPAIRABLE  */}\n        {/* (item.service.status !== \"Booked\") &\n              (item.service.status !== \"In Service\") &&  */}\n        {serviceInfo.map((item, index) => (\n          <ServiceDetails\n            key={item._id}\n            serviceId={item._id}\n            status={item.service.status}\n            name={item.name}\n            email={item.email}\n            phone={item.phone}\n            type={item.type}\n            maker={item.maker}\n            license={item.license}\n            mechanic={item.mechanic}\n            comments={item.comments}\n            totalProduct={item.totalAmountProducts}\n            total={item.totalAppointmentAmount}\n            orderId={item._id}\n            service={item.service}\n            products={item.products}\n            date={item.createdAt}\n            slot={item.slots}\n          />\n        ))}\n      </>\n    );\n  }\n  return (\n    <UserInfoContainer>\n      <Title>Services / Orders</Title>\n      <InnerContaienr>\n        <Card>\n          <ul>{contentService}</ul>\n        </Card>\n        <Card>\n          <ul>{contentOrder}</ul>\n        </Card>\n      </InnerContaienr>\n    </UserInfoContainer>\n  );\n};\n\nexport default UserInfo;\n\nconst usersApear = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(3rem);\n  }\n\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nconst Card = styled.div`\n  flex: 1;\n  padding: 1rem;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.25);\n  border-radius: 14px;\n  background-color: white;\n`;\nconst InnerContaienr = styled.div`\n  display: flex;\n  gap: 1rem;\n  ${mobile({\n    flexDirection: \"column\",\n  })}\n`;\n\nconst UserInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: 60rem;\n  width: 90%;\n  margin: 2rem auto;\n  & ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n  animation: ${usersApear} 1s ease-out forwards;\n`;\n\nconst Title = styled.h3`\n  padding-bottom: 1rem;\n  font-size: 38px;\n  line-height: 1.4;\n  font-weight: 800;\n`;\n","import React from \"react\";\nimport Footer from \"../Components/Footer\";\nimport NavBar from \"../Components/NavBar\";\nimport UserInfo from \"../Components/User/UserInfo\";\n\nconst User = () => {\n  return (\n    <div>\n      <NavBar />\n      <UserInfo />\n      <Footer />\n    </div>\n  );\n};\n\nexport default User;\n"],"names":["props","name","amount","Orders","OrderInfo","Info","styled","serviceId","service","products","UserDetailsContainer","TopContainer","status","to","state","from","Button","OrderID","ServiceContainer","length","map","order","index","orderId","ProductsDetails","contentOrder","contentService","userId","localStorage","getItem","useSelector","auth","phone","email","useQuery","queryKey","queryFn","userRequest","res","data","orderInfo","orderIsFetching","isFetching","serviceInfo","serviceIsFetching","Loading","item","_id","city","address","country","street","postalCode","subtotal","total","date","createdAt","type","maker","license","mechanic","comments","totalProduct","totalAmountProducts","totalAppointmentAmount","slot","slots","UserInfoContainer","Title","InnerContaienr","Card","usersApear","keyframes","mobile","flexDirection","NavBar","Footer"],"sourceRoot":""}